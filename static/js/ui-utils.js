// ===============================
// –£–¢–ò–õ–ò–¢–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ì–û –ò–ù–¢–ï–†–§–ï–ô–°–ê
// static/js/ui-utils.js
// ===============================

window.UIUtils = {
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
     * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} type - –¢–∏–ø: 'info', 'success', 'error', 'warning'
     * @param {number} duration - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞ –≤ –º—Å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3000)
     */
    showToast: function(message, type = 'info', duration = 3000) {
        console.log(`üì¢ ${type.toUpperCase()}: ${message}`);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –ø–æ —Ç–∏–ø—É
        const colors = {
            info: '#007bff',
            success: '#28a745', 
            error: '#dc3545',
            warning: '#ffc107'
        };
        
        const toast = document.createElement('div');
        toast.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${colors[type] || colors.info};
            color: ${type === 'warning' ? '#000' : '#fff'};
            padding: 15px 20px;
            border-radius: 8px;
            z-index: 10000;
            font-size: 14px;
            font-weight: 500;
            max-width: 400px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            animation: slideInRight 0.3s ease-out;
        `;
        
        toast.textContent = message;
        document.body.appendChild(toast);
        
        // –£–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        setTimeout(() => {
            if (toast.parentNode) {
                toast.style.animation = 'slideOutRight 0.3s ease-in';
                setTimeout(() => {
                    if (toast.parentNode) {
                        toast.parentNode.removeChild(toast);
                    }
                }, 300);
            }
        }, duration);
    },
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É (—Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–ª—è showToast —Å —Ç–∏–ø–æ–º error)
     * @param {string} message - –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
     */
    showError: function(message) {
        this.showToast(message, 'error');
    },
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    showSuccess: function(message) {
        this.showToast(message, 'success');
    },
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
     * @param {string} message - –¢–µ–∫—Å—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
     */
    showWarning: function(message) {
        this.showToast(message, 'warning');
    },
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –≥—Ä—É–ø–ø
     * @param {boolean} show - –ü–æ–∫–∞–∑–∞—Ç—å –∏–ª–∏ —Å–∫—Ä—ã—Ç—å
     */
    showGroupsLoading: function(show) {
        const containers = [
            'groupsContainer', 
            'autoSearchGroupsContainer', 
            'broadcastGroupsContainer'
        ];
        
        containers.forEach(containerId => {
            const container = document.getElementById(containerId);
            if (container && show) {
                container.innerHTML = '<div style="text-align: center; padding: 20px; color: #666;">üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø—ã...</div>';
            }
        });
    },
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     * @param {string} type - –¢–∏–ø —Å—á–µ—Ç—á–∏–∫–∞: 'search', 'autosearch', 'broadcast'
     * @param {number} selected - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö
     * @param {number} total - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
     */
    updateCounter: function(type, selected, total) {
        const counters = {
            search: 'selectedCount',
            autosearch: 'autoSelectedCount', 
            broadcast: 'selectedBroadcastCount'
        };
        
        const counterId = counters[type];
        const counterEl = document.getElementById(counterId);
        
        if (counterEl) {
            counterEl.textContent = `–í—ã–±—Ä–∞–Ω–æ: ${selected} –∏–∑ ${total} –≥—Ä—É–ø–ø`;
            console.log(`üìä –û–±–Ω–æ–≤–ª–µ–Ω —Å—á–µ—Ç—á–∏–∫ ${type}: ${selected}/${total}`);
        }
    },
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
     * @param {string} message - –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
     * @param {function} onConfirm - –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
     * @param {function} onCancel - –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
     */
    showConfirm: function(message, onConfirm, onCancel = null) {
        const result = confirm(message);
        if (result && onConfirm) {
            onConfirm();
        } else if (!result && onCancel) {
            onCancel();
        }
        return result;
    },
    
    /**
     * –ë–µ–∑–æ–ø–∞—Å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–ª–µ–º–µ–Ω—Ç–∞
     * @param {string} elementId - ID —ç–ª–µ–º–µ–Ω—Ç–∞
     * @param {string} content - HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
     */
    safeUpdateElement: function(elementId, content) {
        const element = document.getElementById(elementId);
        if (element) {
            element.innerHTML = content;
            return true;
        } else {
            console.warn(`‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç ${elementId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            return false;
        }
    },
    
    /**
     * –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å —ç–ª–µ–º–µ–Ω—Ç
     * @param {string} elementId - ID —ç–ª–µ–º–µ–Ω—Ç–∞
     * @param {boolean} show - –ü–æ–∫–∞–∑–∞—Ç—å –∏–ª–∏ —Å–∫—Ä—ã—Ç—å
     */
    safeToggleElement: function(elementId, show) {
        const element = document.getElementById(elementId);
        if (element) {
            element.style.display = show ? 'block' : 'none';
            return true;
        } else {
            console.warn(`‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç ${elementId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            return false;
        }
    },
    
    /**
     * –î–æ–±–∞–≤–∏—Ç—å CSS –∞–Ω–∏–º–∞—Ü–∏–∏
     */
    addAnimations: function() {
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideInRight {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }
            
            @keyframes slideOutRight {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(100%); opacity: 0; }
            }
            
            @keyframes fadeIn {
                from { opacity: 0; transform: translateY(-10px); }
                to { opacity: 1; transform: translateY(0); }
            }
            
            @keyframes pulse {
                0% { transform: scale(1); }
                50% { transform: scale(1.05); }
                100% { transform: scale(1); }
            }
            
            .loading-spinner {
                display: inline-block;
                width: 20px;
                height: 20px;
                border: 2px solid #f3f3f3;
                border-top: 2px solid #0088cc;
                border-radius: 50%;
                animation: spin 1s linear infinite;
            }
            
            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
            
            .btn-link {
                color: #0088cc;
                text-decoration: none;
                font-size: 12px;
                transition: color 0.2s;
            }
            
            .btn-link:hover {
                color: #006fa6;
                text-decoration: underline;
            }
        `;
        
        if (!document.getElementById('ui-utils-styles')) {
            style.id = 'ui-utils-styles';
            document.head.appendChild(style);
        }
    },
    
    /**
     * –°–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏
     * @param {string} text - –¢–µ–∫—Å—Ç —Ä—è–¥–æ–º —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º
     */
    createLoadingElement: function(text = '–ó–∞–≥—Ä—É–∑–∫–∞...') {
        const div = document.createElement('div');
        div.style.cssText = 'text-align: center; padding: 20px; color: #666;';
        div.innerHTML = `
            <div class="loading-spinner" style="margin-right: 10px;"></div>
            ${text}
        `;
        return div;
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
window.UIUtils.addAnimations();

// –°–æ–∑–¥–∞–µ–º —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –¥–ª—è —á–∞—Å—Ç—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
window.showToast = window.UIUtils.showToast.bind(window.UIUtils);
window.showError = window.UIUtils.showError.bind(window.UIUtils);
window.showSuccess = window.UIUtils.showSuccess.bind(window.UIUtils);

console.log('‚úÖ UIUtils –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω');