// ===============================
// –£–ü–†–ê–í–õ–ï–ù–ò–ï –ò–°–¢–û–†–ò–ï–ô –ü–û–ò–°–ö–ê
// static/js/history-manager.js
// ===============================

window.HistoryManager = {
    
    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞
     */
    loadHistory: function() {
        console.log('üìö –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞...');
        
        const container = document.getElementById('historyContainer');
        if (!container) {
            console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        container.innerHTML = '<div style="text-align: center; padding: 20px; color: #666;">üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏...</div>';
        
        fetch('/get_history')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                this.displayHistory(data.history);
                console.log(`‚úÖ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞: ${data.history.length} –∑–∞–ø–∏—Å–µ–π`);
            } else {
                container.innerHTML = '<div style="text-align: center; padding: 20px; color: #dc3545;">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏</div>';
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', data.error);
            }
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏—Å—Ç–æ—Ä–∏–∏:', error);
            container.innerHTML = '<div style="text-align: center; padding: 20px; color: #dc3545;">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏</div>';
        });
    },
    
    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞
     * @param {Array} history - –ú–∞—Å—Å–∏–≤ –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏
     */
    displayHistory: function(history) {
        console.log(`üìã –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é: ${history.length} –∑–∞–ø–∏—Å–µ–π`);
        
        const container = document.getElementById('historyContainer');
        if (!container) return;
        
        if (history.length === 0) {
            container.innerHTML = `
                <div style="text-align: center; padding: 40px; color: #666;">
                    <div style="font-size: 48px; margin-bottom: 15px;">üìù</div>
                    <h3>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞ –ø—É—Å—Ç–∞</h3>
                    <p>–í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–≤—ã–π –ø–æ–∏—Å–∫, –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å</p>
                </div>
            `;
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏
        const historyHTML = history.map(item => this.createHistoryItemHTML(item)).join('');
        
        container.innerHTML = `
            <div style="margin-bottom: 20px; text-align: right;">
                <button class="back-btn" onclick="window.HistoryManager.clearHistory()" 
                        style="background: #dc3545; color: white;">
                    üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é
                </button>
            </div>
            ${historyHTML}
        `;
    },
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ HTML –¥–ª—è –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏ –∏—Å—Ç–æ—Ä–∏–∏
     * @param {Object} item - –ó–∞–ø–∏—Å—å –∏—Å—Ç–æ—Ä–∏–∏
     * @returns {string} HTML —Å—Ç—Ä–æ–∫–∞
     */
    createHistoryItemHTML: function(item) {
        return `
            <div class="history-item" style="
                background: white; 
                border: 1px solid #ddd; 
                border-radius: 10px; 
                margin-bottom: 15px; 
                padding: 20px;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            ">
                <div class="history-header" style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 15px;">
                    <div class="history-keywords">
                        ${item.keywords.map(keyword => 
                            `<span class="history-keyword" style="
                                background: #e3f2fd; 
                                color: #1976d2; 
                                padding: 4px 8px; 
                                border-radius: 15px; 
                                font-size: 12px; 
                                margin-right: 5px;
                                display: inline-block;
                                margin-bottom: 5px;
                            ">${keyword}</span>`
                        ).join('')}
                    </div>
                    <div class="history-date" style="color: #666; font-size: 12px; white-space: nowrap;">
                        üìÖ ${item.date}
                    </div>
                </div>
                
                <div class="history-stats" style="
                    background: #f8f9fa; 
                    padding: 10px; 
                    border-radius: 8px; 
                    margin-bottom: 15px;
                    font-size: 14px;
                    color: #495057;
                ">
                    üìä –ù–∞–π–¥–µ–Ω–æ: <strong>${item.results_count}</strong> —Å–æ–æ–±—â–µ–Ω–∏–π –≤ <strong>${item.groups_count}</strong> –≥—Ä—É–ø–ø–∞—Ö
                </div>
                
                <div class="history-actions" style="display: flex; gap: 10px;">
                    <button class="history-btn repeat-btn" 
                            onclick="window.HistoryManager.repeatSearch(${item.id})"
                            style="
                                background: #28a745; 
                                color: white; 
                                border: none; 
                                padding: 8px 16px; 
                                border-radius: 5px; 
                                cursor: pointer;
                                font-size: 12px;
                                display: flex;
                                align-items: center;
                                gap: 5px;
                            ">
                        üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫
                    </button>
                    <button class="history-btn delete-btn" 
                            onclick="window.HistoryManager.deleteHistoryItem(${item.id})"
                            style="
                                background: #dc3545; 
                                color: white; 
                                border: none; 
                                padding: 8px 16px; 
                                border-radius: 5px; 
                                cursor: pointer;
                                font-size: 12px;
                                display: flex;
                                align-items: center;
                                gap: 5px;
                            ">
                        üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                    </button>
                    ${item.results_count > 0 ? `
                        <button class="history-btn view-btn" 
                                onclick="window.HistoryManager.viewHistoryResults(${item.id})"
                                style="
                                    background: #007bff; 
                                    color: white; 
                                    border: none; 
                                    padding: 8px 16px; 
                                    border-radius: 5px; 
                                    cursor: pointer;
                                    font-size: 12px;
                                    display: flex;
                                    align-items: center;
                                    gap: 5px;
                                ">
                            üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä
                        </button>
                    ` : ''}
                </div>
            </div>
        `;
    },
    
    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–∏—Å–∫–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
     */
    saveCurrentSearch: function() {
        console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ–∏—Å–∫ –≤ –∏—Å—Ç–æ—Ä–∏—é...');
        
        if (!window.MessageHunter.lastSearchResults) {
            window.UIUtils.showError('‚ùå –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
            return;
        }
        
        const searchData = {
            keywords: window.MessageHunter.lastSearchResults.keywords || [],
            results_count: window.MessageHunter.lastSearchResults.results?.length || 0,
            groups_count: window.MessageHunter.lastSearchResults.groups_count || 0,
            results: window.MessageHunter.lastSearchResults.results || []
        };
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        if (searchData.keywords.length === 0) {
            window.UIUtils.showError('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
            return;
        }
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        const saveBtn = document.getElementById('saveBtn');
        if (saveBtn) {
            saveBtn.disabled = true;
            saveBtn.textContent = 'üíæ –°–æ—Ö—Ä–∞–Ω—è—é...';
        }
        
        fetch('/save_search', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(searchData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                if (saveBtn) {
                    saveBtn.style.display = 'none';
                }
                
                window.UIUtils.showToast('‚úÖ –ü–æ–∏—Å–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é', 'success');
                console.log('‚úÖ –ü–æ–∏—Å–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é');
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∞
                if (window.TabManager.getActiveTab() === 'history') {
                    setTimeout(() => {
                        this.loadHistory();
                    }, 500);
                }
            } else {
                throw new Error(data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
            }
        })
        .catch(error => {
            window.UIUtils.showError('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + error.message);
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é:', error);
        })
        .finally(() => {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            if (saveBtn) {
                saveBtn.disabled = false;
                saveBtn.textContent = 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–∏—Å–∫';
            }
        });
    },
    
    /**
     * –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
     * @param {number} searchId - ID –ø–æ–∏—Å–∫–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏
     */
    repeatSearch: function(searchId) {
        console.log(`üîÑ –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø–æ–∏—Å–∫ ID: ${searchId}`);
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ø–æ–∏—Å–∫–∞
        window.TabManager.switchTab('search');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
        window.UIUtils.showToast('üöß –§—É–Ω–∫—Ü–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
        
        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞ –∏ –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
        // fetch(`/get_search_details/${searchId}`)
        // .then(response => response.json())
        // .then(data => {
        //     if (data.success) {
        //         // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        //         window.MessageHunter.keywords = data.keywords;
        //         window.SearchManager.updateKeywordsDisplay();
        //         
        //         // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã
        //         window.MessageHunter.selectedGroups = data.selected_groups;
        //         window.GroupsManager.restoreSelections('search');
        //         
        //         // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫
        //         window.SearchManager.performSearch();
        //     }
        // });
    },
    
    /**
     * –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
     * @param {number} searchId - ID –ø–æ–∏—Å–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
     */
    deleteHistoryItem: function(searchId) {
        console.log(`üóëÔ∏è –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏—Å—Ç–æ—Ä–∏–∏ ID: ${searchId}`);
        
        if (!confirm('‚ùì –£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –ø–æ–∏—Å–∫ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏?')) {
            return;
        }
        
        fetch(`/delete_search/${searchId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                window.UIUtils.showToast('‚úÖ –ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏', 'success');
                console.log('‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞');
                
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
                this.loadHistory();
            } else {
                throw new Error(data.error || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è');
            }
        })
        .catch(error => {
            window.UIUtils.showError('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + error.message);
            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏:', error);
        });
    },
    
    /**
     * –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
     * @param {number} searchId - ID –ø–æ–∏—Å–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
     */
    viewHistoryResults: function(searchId) {
        console.log(`üëÅÔ∏è –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ ID: ${searchId}`);
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ø–æ–∏—Å–∫–∞
        window.TabManager.switchTab('search');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const resultsDiv = document.getElementById('results');
        const messagesDiv = document.getElementById('messages');
        
        if (resultsDiv) {
            resultsDiv.style.display = 'block';
        }
        
        if (messagesDiv) {
            messagesDiv.innerHTML = '<div style="text-align: center; padding: 20px; color: #666;">üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏...</div>';
        }
        
        fetch(`/get_search_results/${searchId}`)
        .then(response => response.json())
        .then(data => {
            if (data.success && data.results) {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                window.MessageHunter.lastSearchResults = {
                    keywords: data.keywords || [],
                    results: data.results,
                    groups_count: data.groups_count || 0
                };
                
                // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                window.SearchManager.showResults(
                    data.results, 
                    data.keywords.join(', '),
                    []
                );
                
                // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã)
                const saveBtn = document.getElementById('saveBtn');
                if (saveBtn) {
                    saveBtn.style.display = 'none';
                }
                
                window.UIUtils.showToast('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏', 'success');
                console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏');
                
            } else {
                throw new Error(data.error || '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            }
        })
        .catch(error => {
            window.UIUtils.showError('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ' + error.message);
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏:', error);
            
            if (messagesDiv) {
                messagesDiv.innerHTML = '<div style="text-align: center; padding: 20px; color: #dc3545;">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</div>';
            }
        });
    },
    
    /**
     * –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞
     */
    clearHistory: function() {
        console.log('üóëÔ∏è –û—á–∏—â–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞...');
        
        if (!confirm('‚ùì –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
            return;
        }
        
        const container = document.getElementById('historyContainer');
        if (container) {
            container.innerHTML = '<div style="text-align: center; padding: 20px; color: #666;">üîÑ –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é...</div>';
        }
        
        fetch('/clear_history', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                window.UIUtils.showToast('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞ –æ—á–∏—â–µ–Ω–∞', 'success');
                console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞');
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é
                this.displayHistory([]);
            } else {
                throw new Error(data.error || '–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏');
            }
        })
        .catch(error => {
            window.UIUtils.showError('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏: ' + error.message);
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
            
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
            this.loadHistory();
        });
    },
    
    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –∏—Å—Ç–æ—Ä–∏–∏ –≤ —Ñ–∞–π–ª
     */
    exportHistory: function() {
        console.log('üìÑ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞...');
        
        fetch('/export_history')
        .then(response => {
            if (response.ok) {
                return response.blob();
            } else {
                throw new Error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∏—Å—Ç–æ—Ä–∏–∏');
            }
        })
        .then(blob => {
            // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `message_hunter_history_${new Date().toISOString().split('T')[0]}.json`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
            
            window.UIUtils.showToast('‚úÖ –ò—Å—Ç–æ—Ä–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞', 'success');
            console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞');
        })
        .catch(error => {
            window.UIUtils.showError('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: ' + error.message);
            console.error('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∏—Å—Ç–æ—Ä–∏–∏:', error);
        });
    },
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
     */
    getHistoryStats: function() {
        console.log('üìä –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å—Ç–æ—Ä–∏–∏...');
        
        fetch('/get_history_stats')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                this.displayHistoryStats(data.stats);
            } else {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', data.error);
            }
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        });
    },
    
    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
     * @param {Object} stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
     */
    displayHistoryStats: function(stats) {
        const statsHTML = `
            <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 20px;">
                <h4 style="margin: 0 0 10px 0; color: #495057;">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏</h4>
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 15px;">
                    <div style="text-align: center;">
                        <div style="font-size: 24px; font-weight: bold; color: #007bff;">${stats.total_searches || 0}</div>
                        <div style="font-size: 12px; color: #666;">–í—Å–µ–≥–æ –ø–æ–∏—Å–∫–æ–≤</div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 24px; font-weight: bold; color: #28a745;">${stats.total_results || 0}</div>
                        <div style="font-size: 12px; color: #666;">–ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π</div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 24px; font-weight: bold; color: #6f42c1;">${stats.unique_keywords || 0}</div>
                        <div style="font-size: 12px; color: #666;">–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤</div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 24px; font-weight: bold; color: #fd7e14;">${stats.groups_searched || 0}</div>
                        <div style="font-size: 12px; color: #666;">–ì—Ä—É–ø–ø –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ</div>
                    </div>
                </div>
            </div>
        `;
        
        const container = document.getElementById('historyContainer');
        if (container) {
            container.insertAdjacentHTML('afterbegin', statsHTML);
        }
    }
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
function saveCurrentSearch() {
    window.HistoryManager.saveCurrentSearch();
}

function repeatSearch(searchId) {
    window.HistoryManager.repeatSearch(searchId);
}

function deleteHistoryItem(searchId) {
    window.HistoryManager.deleteHistoryItem(searchId);
}

function clearHistory() {
    window.HistoryManager.clearHistory();
}

console.log('‚úÖ HistoryManager –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');