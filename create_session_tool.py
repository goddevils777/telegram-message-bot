from pyrogram import Client
import sys
import os
import json
import shutil
from datetime import datetime

def create_session():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ"""
    print("üîê –°–û–ó–î–ê–ù–ò–ï –°–ï–°–°–ò–ò TELEGRAM –ê–ö–ö–ê–£–ù–¢–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á–∏
    if not os.path.exists('config/api_keys.json'):
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª config/api_keys.json")
        print("–°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏ –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")
        return False
    
    with open('config/api_keys.json', 'r') as f:
        config = json.load(f)
    
    api_id = config['API_ID']
    api_hash = config['API_HASH']
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Å–µ—Å—Å–∏–∏
    account_name = input("üìù –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 'main_account'): ").strip()
    if not account_name:
        account_name = f"account_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    
    session_file = f"session_{account_name}"
    
    print(f"\nüöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ '{session_file}'...")
    print("üì± –°–µ–π—á–∞—Å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ SMS –∫–æ–¥–∞")
    print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –í–≤–æ–¥–∏—Ç–µ –∫–æ–¥ –¢–û–ß–ù–û –∫–∞–∫ –ø–æ–ª—É—á–∏–ª–∏!")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
        client = Client(session_file, api_id=api_id, api_hash=api_hash)
        
        with client:
            me = client.get_me()
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
            account_info = {
                'session_file': f"{session_file}.session",
                'account_name': account_name,
                'user_info': {
                    'id': str(me.id),
                    'first_name': me.first_name or '',
                    'last_name': me.last_name or '',
                    'username': me.username or '',
                    'phone': me.phone_number or ''
                },
                'created_at': datetime.now().isoformat(),
                'status': 'ready'
            }
            
            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–µ—Å—Å–∏–π –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            os.makedirs('sessions', exist_ok=True)
            
            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Å–µ—Å—Å–∏—é –≤ –ø–∞–ø–∫—É sessions
            if os.path.exists(f"{session_file}.session"):
                shutil.move(f"{session_file}.session", f"sessions/{session_file}.session")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
            with open(f"sessions/{account_name}_info.json", 'w', encoding='utf-8') as f:
                json.dump(account_info, f, ensure_ascii=False, indent=2)
            
            print(f"\n‚úÖ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù–ê –°–ï–°–°–ò–Ø!")
            print(f"üë§ –ê–∫–∫–∞—É–Ω—Ç: {me.first_name} {me.last_name}")
            print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {me.phone_number}")
            print(f"üìÅ –§–∞–π–ª —Å–µ—Å—Å–∏–∏: sessions/{session_file}.session")
            print(f"üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: sessions/{account_name}_info.json")
            print(f"\nüåê –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ!")
            
            return True
            
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –°–û–ó–î–ê–ù–ò–Ø –°–ï–°–°–ò–ò: {e}")
        
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –ø—Ä–∏ –æ—à–∏–±–∫–µ
        for file in [f"{session_file}.session", f"sessions/{session_file}.session"]:
            if os.path.exists(file):
                os.remove(file)
        
        return False

def list_sessions():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Å—Å–∏–π"""
    if not os.path.exists('sessions'):
        print("üìÅ –ü–∞–ø–∫–∞ sessions –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    sessions = []
    for file in os.listdir('sessions'):
        if file.endswith('_info.json'):
            try:
                with open(f"sessions/{file}", 'r', encoding='utf-8') as f:
                    info = json.load(f)
                sessions.append(info)
            except:
                continue
    
    if not sessions:
        print("üì≠ –ù–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π")
        return
    
    print("\nüìã –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –°–ï–°–°–ò–ò:")
    print("=" * 50)
    
    for i, session in enumerate(sessions, 1):
        user = session['user_info']
        print(f"{i}. {session['account_name']}")
        print(f"   üë§ {user['first_name']} {user['last_name']}")
        print(f"   üì± {user['phone']}")
        print(f"   üìÖ {session['created_at'][:10]}")
        print()

def main():
    if len(sys.argv) > 1:
        if sys.argv[1] == 'list':
            list_sessions()
            return
        elif sys.argv[1] == 'help':
            print("üîß –ò–ù–°–¢–†–£–ú–ï–ù–¢ –°–û–ó–î–ê–ù–ò–Ø –°–ï–°–°–ò–ô")
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
            print("  python3 create_session_tool.py        - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é")
            print("  python3 create_session_tool.py list   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Å—Å–∏–∏")
            print("  python3 create_session_tool.py help   - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
            return
    
    create_session()

if __name__ == "__main__":
    main()