from pyrogram import Client, filters
import asyncio
from session_manager import SessionManager
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import time

# API –¥–∞–Ω–Ω—ã–µ
API_ID = 29318340
API_HASH = "68be30e447857e5e5aa24c23a41c686d"
BOT_TOKEN = "8083238823:AAHgAcvKL7nf29zz66kGB3bL6QCSHOVXCRA"

# –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–µ—Å—Å–∏–π
session_manager = SessionManager(API_ID, API_HASH)

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
auth_bot = Client("auth_bot", api_id=API_ID, api_hash=API_HASH, bot_token=BOT_TOKEN)

# –°–æ—Å—Ç–æ—è–Ω–∏—è
user_states = {}
temp_clients = {}

@auth_bot.on_message(filters.text & filters.private & ~filters.command("start"))
async def handle_text(client, message):
    telegram_user_id = message.from_user.id
    text = message.text.strip()
    
    print(f"üîç DEBUG: –ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç –æ—Ç {telegram_user_id}: {text}")
    print(f"üîç DEBUG: user_states —Å–æ–¥–µ—Ä–∂–∏—Ç: {list(user_states.keys())}")
    
    if telegram_user_id not in user_states:
        print(f"‚ùå DEBUG: {telegram_user_id} –ù–ï –Ω–∞–π–¥–µ–Ω –≤ user_states")
        await message.reply_text(
            "‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.\n"
            "–ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç–µ."
        )
        return
    
    print(f"‚úÖ DEBUG: {telegram_user_id} –Ω–∞–π–¥–µ–Ω –≤ user_states")
    
    state = user_states[telegram_user_id]
    
    if state['step'] == 'waiting_phone':
        await handle_phone(message, telegram_user_id, text, state)
    elif state['step'] == 'waiting_code':
        await handle_code(message, telegram_user_id, text, state)

@auth_bot.on_message(filters.text & filters.private)
async def handle_text(client, message):
    telegram_user_id = message.from_user.id
    text = message.text.strip()
    
    if telegram_user_id not in user_states:
        await message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /auth USER_ID")
        return
    
    state = user_states[telegram_user_id]
    
    if state['step'] == 'waiting_phone':
        await handle_phone(message, telegram_user_id, text, state)
    elif state['step'] == 'waiting_code':
        await handle_code(message, telegram_user_id, text, state)

async def start_auth_process(message, telegram_user_id, web_user_id):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print(f"üîç DEBUG: start_auth_process –¥–ª—è telegram_user_id={telegram_user_id}, web_user_id={web_user_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–µ—Å—Å–∏—è
    if session_manager.has_session(web_user_id):
        print(f"üîç DEBUG: –°–µ—Å—Å–∏—è –¥–ª—è {web_user_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        await message.reply_text(
            "‚úÖ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω!\n"
            "–í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç - –≤–∞—à–∏ –≥—Ä—É–ø–ø—ã –¥–æ–ª–∂–Ω—ã –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è."
        )
        return
    
    # –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    user_states[telegram_user_id] = {
        'web_user_id': web_user_id,
        'step': 'waiting_phone'
    }
    
    print(f"‚úÖ DEBUG: –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è {telegram_user_id}: {user_states[telegram_user_id]}")
    
    await message.reply_text(
        "üîê **–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞**\n\n"
        "üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "`+380991234567`"
    )

async def handle_code(message, telegram_user_id, code, state):
    if not (code.isdigit() and len(code) == 5):
        await message.reply_text("‚ùå –í–≤–µ–¥–∏—Ç–µ 5-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥")
        return
    
    try:
        temp_data = temp_clients[telegram_user_id]
        client = temp_data['client']
        
        # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
        await client.sign_in(
            temp_data['phone'],
            temp_data['phone_code_hash'],
            code
        )
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        me = await client.get_me()
        await client.disconnect()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
        session_data = {
            'telegram_user_id': telegram_user_id,
            'phone': temp_data['phone'],
            'first_name': me.first_name or '',
            'last_name': me.last_name or '',
            'username': me.username or '',
            'user_id': str(me.id),
            'created_at': time.time()  # –¢–µ–ø–µ—Ä—å time –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
        }
        
        session_manager.save_session(state['web_user_id'], session_data)
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        del user_states[telegram_user_id]
        del temp_clients[telegram_user_id]
        
        await message.reply_text(
            f"‚úÖ –ê–∫–∫–∞—É–Ω—Ç {me.first_name} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!\n"
            f"–¢–µ–ø–µ—Ä—å –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ'."
        )
        
    except Exception as e:
        await message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {str(e)}")

async def handle_code(message, telegram_user_id, code, state):
    if not (code.isdigit() and len(code) == 5):
        await message.reply_text("‚ùå –í–≤–µ–¥–∏—Ç–µ 5-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥")
        return
    
    try:
        temp_data = temp_clients[telegram_user_id]
        client = temp_data['client']
        
        # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
        await client.sign_in(
            temp_data['phone'],
            temp_data['phone_code_hash'],
            code
        )
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        me = await client.get_me()
        await client.disconnect()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
        session_data = {
            'telegram_user_id': telegram_user_id,
            'phone': temp_data['phone'],
            'first_name': me.first_name or '',
            'last_name': me.last_name or '',
            'username': me.username or '',
            'user_id': str(me.id),
            'created_at': time.time()
        }
        
        session_manager.save_session(state['web_user_id'], session_data)
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        del user_states[telegram_user_id]
        del temp_clients[telegram_user_id]
        
        await message.reply_text(
            f"‚úÖ –ê–∫–∫–∞—É–Ω—Ç {me.first_name} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!\n"
            f"–¢–µ–ø–µ—Ä—å –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç - –≤–∞—à–∏ –≥—Ä—É–ø–ø—ã –∑–∞–≥—Ä—É–∑—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
        )
        
    except Exception as e:
        await message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {str(e)}")

if __name__ == "__main__":
    print("ü§ñ Auth bot starting...")
    auth_bot.run()