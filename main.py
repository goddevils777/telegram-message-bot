import time  # –î–æ–±–∞–≤—å –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞
import asyncio  
from pyrogram import Client, filters

# API –¥–∞–Ω–Ω—ã–µ (—Ç–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è)
API_ID = 29318340  # –¢–≤–æ–π API ID (—á–∏—Å–ª–æ)
API_HASH = "API_HASH"  # –¢–≤–æ–π API Hash (–≤ –∫–∞–≤—ã—á–∫–∞—Ö)
BOT_TOKEN = "BOT_TOKEN"  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞

# –°–æ–∑–¥–∞—ë–º –û–°–ù–û–í–ù–û–ô –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ç–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
user_app = Client("main_account", api_id=API_ID, api_hash=API_HASH)

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω–æ
bot_app = Client("bot_account", api_id=API_ID, api_hash=API_HASH, bot_token=BOT_TOKEN)

# –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –±–æ—Ç–∞
@bot_app.on_message(filters.command("start"))
def start_command(client, message):
    if len(message.command) > 1 and message.command[1] == "web_login":
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –¥–ª—è –≤–µ–±-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        auth_code = f"WEB{message.from_user.id}"
        message.reply_text(
            f"üîê –í–∞—à –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:\n\n"
            f"`{auth_code}`\n\n"
            f"–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ."
        )
    else:
        message.reply_text(
            "–ü—Ä–∏–≤–µ—Ç! –Ø –∏—â—É —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º.\n\n"
            "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞"
        )

async def search_in_groups(keyword):
    try:
        if not user_app.is_connected:
            await user_app.start()
        
        print(f"–ü–æ–∏—Å–∫ —Å–ª–æ–≤–∞: {keyword}")
        
        # –ü–æ–ª—É—á–∞–µ–º –í–°–ï –≥—Ä—É–ø–ø–æ–≤—ã–µ —á–∞—Ç—ã
        groups_chats = []
        async for dialog in user_app.get_dialogs():
            if dialog.chat.type.name != "PRIVATE":
                groups_chats.append(dialog.chat)
        
        print(f"–ë—É–¥–µ–º –∏—Å–∫–∞—Ç—å –≤ {len(groups_chats)} —á–∞—Ç–∞—Ö")
        
        found_messages = []
        
        # –ò—â–µ–º –≤–æ –í–°–ï–• –≥—Ä—É–ø–ø–∞—Ö —Å –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏
        for i, chat in enumerate(groups_chats, 1):
            try:
                print(f"[{i}/{len(groups_chats)}] –ò—â—É –≤: {chat.title}")
                message_count = 0
                
                # –ò—â–µ–º –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 1000 —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã
                async for message in user_app.get_chat_history(chat.id, limit=1000):
                    message_count += 1
                    if message.text and keyword.lower() in message.text.lower():
                        found_messages.append({
                            'text': message.text,
                            'author': message.from_user.username if message.from_user else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                            'chat': chat.title,
                            'date': message.date.strftime("%d.%m.%Y %H:%M")
                        })
                
                print(f"   –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ: {message_count} —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞–π–¥–µ–Ω–æ: {len([m for m in found_messages if m['chat'] == chat.title])}")
                
                # –ó–ê–î–ï–†–ñ–ö–ê –º–µ–∂–¥—É –≥—Ä—É–ø–ø–∞–º–∏ - 1 —Å–µ–∫—É–Ω–¥–∞
                if i < len(groups_chats):  # –ù–µ –∂–¥—ë–º –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≥—Ä—É–ø–ø—ã
                    await asyncio.sleep(1)
                        
            except Exception as e:
                print(f"   –û—à–∏–±–∫–∞ –≤ {chat.title}: {e}")
                # –ü—Ä–∏ –æ—à–∏–±–∫–µ –∂–¥—ë–º –¥–æ–ª—å—à–µ
                await asyncio.sleep(2)
        
        print(f"–ò–¢–û–ì–û –Ω–∞–π–¥–µ–Ω–æ: {len(found_messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
        return found_messages
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return []

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
@bot_app.on_message(filters.text & ~filters.command("start"))
async def search_messages(client, message):
    keyword = message.text.strip()
    await message.reply_text(f"–ò—â—É '{keyword}' –≤–æ –≤—Å–µ—Ö –≥—Ä—É–ø–ø–∞—Ö (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 1000 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–∂–¥–æ–π)...\n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è ‚è≥")
    
    results = await search_in_groups(keyword)
    
    if results:
        await message.reply_text(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(results)} —Å–æ–æ–±—â–µ–Ω–∏–π! –û—Ç–ø—Ä–∞–≤–ª—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...")
        
        response = ""
        sent_count = 0
        
        for i, msg in enumerate(results, 1):
            try:
                # –ü–û–õ–ù–´–ô —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –æ–±—Ä–µ–∑–∫–∏
                full_text = str(msg['text']).replace('\n', '\n   ')  # –û—Ç—Å—Ç—É–ø—ã –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
                safe_author = str(msg['author'])
                safe_chat = str(msg['chat'])
                safe_date = str(msg['date'])
                
                new_entry = f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                new_entry += f"{i}. üìù –ü–û–õ–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï:\n"
                new_entry += f"   {full_text}\n\n"
                new_entry += f"üë§ –ê–≤—Ç–æ—Ä: @{safe_author}\n"
                new_entry += f"üí¨ –ì—Ä—É–ø–ø–∞: {safe_chat}\n"
                new_entry += f"üìÖ –î–∞—Ç–∞: {safe_date}\n"
                new_entry += f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É (Telegram –ª–∏–º–∏—Ç ~4096 —Å–∏–º–≤–æ–ª–æ–≤)
                if len(response + new_entry) > 3800:
                    await message.reply_text(response)
                    sent_count += 1
                    response = new_entry
                else:
                    response += new_entry
                    
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {i}: {e}")
                continue
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å
        if response.strip():
            await message.reply_text(response)
            sent_count += 1
            
        await message.reply_text(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –ü–æ–∫–∞–∑–∞–Ω–æ {len(results)} –ø–æ–ª–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ {sent_count} —á–∞—Å—Ç—è—Ö")
        
    else:
        await message.reply_text("–°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã üòî")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫...")
    bot_app.run()